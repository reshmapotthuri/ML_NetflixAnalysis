@page
@model IndexModel
@{
    ViewData["Title"] = "Netflix Type Chart";
    var type = Model.TypeCounts.Select(tc => tc.Type).ToArray();
    var values = Model.TypeCounts.Select(tc => tc.Count).ToArray();
    // var year = Model.YearCounts.Select(tc => tc.Year).ToArray();
    // var yearCount = Model.YearCounts.Select(tc => tc.Count).ToArray();

}
<h3 style="text-align: center;">Netflix Dashboard</h3>

<!-- Row 1: Type vs Year -->
<div style="display: flex; flex-wrap: wrap; gap: 20px; margin-bottom: 40px;">
    <div style="flex: 1; min-width: 350px; max-width: 800px;">
        <h4>Movies vs TV Shows</h4>
        <canvas id="typeChart"></canvas>
    </div>
    <div style="flex: 1; min-width: 350px; max-width: 800px;">
        <h4>Top 10 Countries Producing Netflix Content</h4>
        <canvas id="countryChart"></canvas>
    </div>
</div>

<!-- Row 2: Country Chart Full Width -->
<div style="display: flex; flex-wrap: wrap; gap: 20px; margin-bottom: 40px;">
    <div style="flex: 1; min-width: 350px; max-width: 800px;">
        <h4>Content by Release Year</h4>
        <canvas id="yearChart"></canvas>
    </div>
    <div style="flex: 1; min-width: 350px; max-width: 800px;">
        <h4>Top 10 Genres on Netflix</h4>
        <canvas id="genreChart"></canvas>
    </div>
</div>
@* <div style="width: 100%; max-width: 800px; margin: auto;">
    <h3>Content by Release Year</h3>
    <canvas id="yearChart"></canvas>
</div> *@

@* <div style="width: 100%; max-width: 800px; margin-bottom: 40px;">
    <canvas id="typeChart"></canvas>
</div>

<div style="width: 100%; max-width: 800px; margin-bottom: 40px;">
    <canvas id="yearChart"></canvas>
</div>
<div style="width: 100%; max-width: 800px;">
    <canvas id="countryChart"></canvas>
</div> *@

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const typectx = document.getElementById('typeChart').getContext('2d');
    const typeChart = new Chart(typectx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(type)),
            datasets: [{
                label: 'Movies vs TV Shows on Netflix',
                data: @Html.Raw(Json.Serialize(values)),
                backgroundColor: ['#4e79a7', '#f28e2b'],
                // borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,

            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Count'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Type'
                    }
                }
            }
        }
    });
</script>
<script>
    const yearctx = document.getElementById('yearChart').getContext('2d');
    const yearchart = new Chart(yearctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.YearCounts.Select(y => y.Year))),
            datasets: [{
                label: 'Netflix Content by Release Year',
                data: @Html.Raw(Json.Serialize(Model.YearCounts.Select(y => y.Count))),
                backgroundColor: 'rgba(54, 162, 235, 0.6)'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Number of Titles'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Release Year'
                    }
                }
            }
        }
    });
</script>
<script>
    const countryctx = document.getElementById('countryChart').getContext('2d');
    const countrychart = new Chart(countryctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.TopCountries.Select(c => c.Country))),
            datasets: [{
                label: 'Top 10 Countries producing Netflix content',
                data: @Html.Raw(Json.Serialize(Model.TopCountries.Select(c => c.Count))),
                backgroundColor: 'rgba(255, 99, 132, 0.6)'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Number of Titles'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Country'
                    }
                }
            }
        }
    });
</script>
<script>
    const genrectx = document.getElementById('genreChart').getContext('2d');
    const genreChart = new Chart(genrectx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.TopGenres.Select(g => g.Genre))),
            datasets: [{
                label: 'Top 10 Genres on Netflix',
                data: @Html.Raw(Json.Serialize(Model.TopGenres.Select(g => g.Count))),
                backgroundColor: 'rgba(153, 102, 255, 0.6)'
            }]
        },
        options: {
            indexAxis: 'y', // Horizontal bar chart
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Number of Titles'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Genre'
                    }
                }
            }
        }
    });
</script>


<style>
    canvas {
        height: 500px !important;
    }

    #typeChart,
    #countryChart,
    #genreChart,
    #yearChart {
        height: 350px !important;
    }

</style>


